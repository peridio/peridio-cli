name: Continuous integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Cargo check project
        run: cargo check
  test:
    runs-on: "${{ matrix.os }}"
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
      PERIDIO_CLOUD_PATH: tests/support/peridio-cloud
      DATABASE_URL: postgres://db:db@0.0.0.0:5432/db
    services:
      postgres:
        ports:
          - 5432:5432
        image: postgres:14.4
        env:
          POSTGRES_USER: db
          POSTGRES_DB: db
          POSTGRES_PASSWORD: db
        options: --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        include:
          # keep the matrix include, in case we want to to test in other systems, keep in mind is more expensive
          - os: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      - name: Checkout peridio/peridio-cloud for integration tests
        uses: actions/checkout@v4
        with:
          repository: peridio/peridio-cloud
          ssh-key: ${{ secrets.PERIDIO_CLOUD_DEPLOY_KEY }}
          ref: main
          path: ${{ env.PERIDIO_CLOUD_PATH }}

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: 27.2.1
          elixir-version: 1.18.1

      - name: Restore deps and _build cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.PERIDIO_CLOUD_PATH }}/deps
            ${{ env.PERIDIO_CLOUD_PATH }}/_build
            ${{ env.PERIDIO_CLOUD_PATH }}/apps/peridio_cloud_core/priv
          key: deps-${{ runner.os }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            deps-${{ runner.os }}

      - name: Get dependencies and compile peridio-cloud
        working-directory: ${{ env.PERIDIO_CLOUD_PATH }}
        run: |
          mix deps.get
          mix compile --warnings-as-error
      - name: Migrate DB
        working-directory: ${{ env.PERIDIO_CLOUD_PATH }}
        run: mix ecto.migrate
      - name: Add hosts to /etc/hosts
        run: |
          sudo echo "127.0.0.1 api.test.peridio.com" | sudo tee -a /etc/hosts

      - name: cargo test project
        run: cargo test
  rustfmt:
    runs-on: ubuntu-latest
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: "rustfmt"
      - uses: Swatinem/rust-cache@v2
      - name: cargo check fortmat
        run: cargo fmt --all -- --check
  clippy:
    runs-on: ubuntu-latest
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: "clippy"
      - uses: Swatinem/rust-cache@v2
      - name: cargo check fortmat
        run: cargo clippy -- -D warnings
  build:
    if: github.event_name == 'push'
    needs:
      - rustfmt
      - clippy
      - test
      - check
    runs-on: "${{ matrix.os }}"
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: ""
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: ""
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            suffix: ""
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            suffix: ""
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            suffix: .exe
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}
      - name: Install Cross for windows
        if: ${{ contains(matrix.target, 'windows') }}
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: Install Cross for musl
        uses: taiki-e/install-action@v2
        if: ${{ contains(matrix.target, 'musl') }}
        with:
          tool: cross
      - uses: Swatinem/rust-cache@v2

      - name: cargo build release
        if: ${{ !(contains(matrix.target, 'musl') || contains(matrix.target, 'windows')) }}
        run: cargo build --release --target ${{ matrix.target }}
      - name: cross build release
        if: ${{ contains(matrix.target, 'musl') || contains(matrix.target, 'windows') }}
        run: cross build --release --target ${{ matrix.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: peridio-cli-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/peridio-cli${{ matrix.suffix }}
